// if typescript argument is present, add '/typescript' subfolder to required filepath
const version = process.argv[3] ? `/${process.argv[3]}` : '';

const {updateMatrix} = require(`../solutions${version}/01-matrix.js`);

describe('01-matrix tests', () => {
  it('works for the given example inputs', () => {
    expect(updateMatrix([[0,0,0],[0,1,0],[0,0,0]])).toEqual([[0,0,0],[0,1,0],[0,0,0]]);
    expect(updateMatrix([[0,0,0],[0,1,0],[1,1,1]])).toEqual([[0,0,0],[0,1,0],[1,2,1]]);
  });
  it('works for 1x1 length matrix', () => {
    expect(updateMatrix([0])).toEqual([0]);
  });
  it('works for large matrices', () => {
    const largeInput = [[1,1,1,1,1,0,1,0,1,0,1,0,1,1,0,1,1,1,0,1,1,1,0,1,1,1,1,0,1,1],[1,1,1,0,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0,0,1],[1,1,1,1,0,1,0,0,1,1,0,1,1,0,1,1,1,0,1,0,1,0,0,1,0,1,0,1,1,1],[1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,1],[0,1,0,0,1,0,0,1,1,1,0,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,1,1,0,1],[1,0,1,1,1,1,0,1,0,1,0,1,1,1,0,1,1,1,1,0,1,1,0,1,0,1,0,0,1,0],[1,1,0,1,1,0,0,0,1,1,0,0,0,1,0,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1],[1,1,1,0,0,0,1,0,0,1,1,1,1,1,1,1,1,0,1,0,1,0,0,1,0,0,1,0,0,1],[0,1,1,0,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,1,1,0,0,1,0,1],[1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,0,0,1,1],[1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,0,1,0,1,1,1,0],[1,1,1,1,0,1,0,0,0,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1,1,1],[0,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,0,0,0,1],[0,1,1,0,0,0,1,1,0,0,0,0,1,1,0,1,1,1,1,1,1,1,0,1,0,0,1,1,1,1],[1,1,1,1,0,0,1,1,1,0,0,1,1,0,1,1,1,0,0,1,1,0,1,0,0,0,0,1,1,1],[1,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,1,1,0,0,1,0,0,0],[1,1,0,1,1,0,0,1,1,0,0,1,0,1,1,1,1,0,1,1,1,0,1,1,0,1,0,1,0,1],[1,0,0,0,1,1,1,0,1,1,1,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,1,1,0],[1,1,0,1,0,1,1,0,0,1,1,0,0,1,0,1,1,1,1,1,1,0,1,0,0,0,0,1,1,1],[1,1,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,1,1,0],[1,0,0,1,1,1,1,0,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,1,1,0,1,1],[0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,0,0,1,0,1,1,0,1,1,0,1,0,1],[1,1,1,0,1,1,1,0,0,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1],[1,1,0,0,1,1,1,1,0,0,1,0,0,1,1,0,0,1,1,1,1,0,1,1,0,1,1,1,1,1],[0,0,0,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,0,0,0,1,1,0],[1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,0,1,0,0,0,0,0,1,1,1],[1,0,1,1,0,1,1,0,1,0,1,1,1,0,1,1,1,1,1,0,1,0,0,1,1,0,0,1,1,0],[1,1,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,0,1,1,1],[0,1,1,0,1,1,0,0,1,0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,1,1,0,1,0]];
    const largeOutput = [[4,3,2,1,1,0,1,0,1,0,1,0,1,1,0,1,2,1,0,1,2,1,0,1,2,1,1,0,1,2],[3,2,1,0,1,1,0,0,0,0,1,1,2,1,1,2,2,1,1,0,1,1,1,2,1,0,1,0,0,1],[2,3,2,1,0,1,0,0,1,1,0,1,1,0,1,1,1,0,1,0,1,0,0,1,0,1,0,1,1,2],[1,2,1,1,1,0,1,1,2,2,1,0,1,1,0,0,0,0,1,0,0,0,0,1,1,2,1,0,0,1],[0,1,0,0,1,0,0,1,1,1,0,1,2,2,1,1,0,1,0,1,1,1,1,1,0,1,1,1,0,1],[1,0,1,1,2,1,0,1,0,1,0,1,1,1,0,1,1,2,1,0,1,1,0,1,0,1,0,0,1,0],[2,1,0,1,1,0,0,0,1,1,0,0,0,1,0,1,2,1,2,1,0,1,0,1,1,0,1,1,1,1],[1,2,1,0,0,0,1,0,0,1,1,1,1,2,1,2,1,0,1,0,1,0,0,1,0,0,1,0,0,1],[0,1,1,0,1,1,1,0,1,0,1,1,0,1,2,2,1,0,1,0,1,1,1,2,1,0,0,1,0,1],[1,1,0,0,1,2,1,0,1,1,2,2,1,2,3,2,1,1,0,0,1,2,2,1,0,0,0,0,1,1],[2,2,1,1,1,2,1,1,0,1,2,2,1,2,2,1,0,1,1,1,0,1,1,0,1,0,1,1,1,0],[1,2,2,1,0,1,0,0,0,1,2,1,0,1,2,1,0,1,0,1,1,1,0,1,0,1,1,1,1,1],[0,1,1,0,0,0,0,1,1,1,1,1,1,2,1,2,1,0,1,0,1,2,1,1,0,1,0,0,0,1],[0,1,1,0,0,0,1,1,0,0,0,0,1,1,0,1,2,1,1,1,2,1,0,1,0,0,1,1,1,2],[1,2,2,1,0,0,1,1,1,0,0,1,1,0,1,2,1,0,0,1,1,0,1,0,0,0,0,1,1,1],[2,2,1,1,0,1,1,0,1,1,0,1,1,1,2,3,2,1,0,0,0,0,1,1,0,0,1,0,0,0],[2,1,0,1,1,0,0,1,1,0,0,1,0,1,2,2,1,0,1,1,1,0,1,1,0,1,0,1,0,1],[1,0,0,0,1,1,1,0,1,1,1,1,0,0,1,2,1,0,1,1,0,1,0,0,1,1,1,2,1,0],[2,1,0,1,0,1,1,0,0,1,1,0,0,1,0,1,1,1,2,2,1,0,1,0,0,0,0,1,2,1],[2,1,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,0,1,2,1,0,1,1,0,1,0,1,1,0],[1,0,0,1,2,1,1,0,1,0,1,1,1,0,1,1,1,0,1,2,1,0,1,1,1,2,1,0,1,1],[0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,0,0,1,0,1,1,0,1,1,0,1,0,1],[1,2,1,0,1,1,1,0,0,1,0,0,0,1,2,1,1,0,1,2,1,0,1,1,1,2,1,2,1,2],[1,1,0,0,1,2,2,1,0,0,1,0,0,1,1,0,0,1,2,2,1,0,1,1,0,1,1,2,2,1],[0,0,0,1,2,3,3,2,1,0,1,1,1,0,0,1,1,2,3,2,1,1,0,1,0,0,0,1,1,0],[1,1,0,1,1,2,2,1,2,1,1,0,1,1,0,0,1,2,2,1,0,1,0,0,0,0,0,1,2,1],[1,0,1,1,0,1,1,0,1,0,1,1,1,0,1,1,2,2,1,0,1,0,0,1,1,0,0,1,1,0],[2,1,1,0,0,1,1,1,1,0,1,0,1,1,2,1,2,2,1,0,0,1,1,2,2,1,1,2,2,1],[1,2,2,1,1,0,0,1,2,1,2,1,2,2,1,0,1,1,0,1,1,2,1,1,1,0,0,1,2,1],[0,1,1,0,1,1,0,0,1,0,1,2,2,1,0,0,1,2,1,2,2,1,0,0,0,1,1,0,1,0]];
    expect(updateMatrix(largeInput)).toEqual(largeOutput);
  });
});
